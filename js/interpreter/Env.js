// Generated by CoffeeScript 1.12.4

/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    * File: Env_N.coffee
    * ----------------
    * Simply contains the info for the Env class
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 */

(function() {
  this.Env = (function() {

    /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        * Env
        * ----------------
        * Env is a link list of all the variables and functions that the user defines
        * and the primative functions
        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     */
    function Env(name, val, parent) {
      this.name = name;
      this.val = val;

      /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          * constructor (String name, Token val, Env parent)
          * ----------------
          * name is the name of the variable/function
          * val is a token containing the variable or function value
          * parent contains the next Env in the list
          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       */
      this.parent = !parent ? null : parent;
    }

    Env.prototype["eval"] = function(t) {

      /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          * eval (Token t)
          * ----------------
          * Finds the evaluated value of the same name as t and returns it
          * Throws and exception if there is not value with the same name.
          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       */
      if (this.name === t.body) {
        return this.val["eval"]();
      }
      if (this.parent === null) {
        console.trace();
        throw 'Couldn\'t find variable name';
      }
      return this.parent["eval"](t);
    };

    return Env;

  })();

}).call(this);

//# sourceMappingURL=Env.js.map
